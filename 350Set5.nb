(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16529,        462]
NotebookOptionsPosition[     13825,        405]
NotebookOutlinePosition[     14213,        421]
CellTagsIndexPosition[     14170,        418]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Set", " ", "5"}], ":", " ", "Substitutions"}], ",", " ", 
   "Iteration"}], "Title"]], "Input",
 CellChangeTimes->{{3.919807936189116*^9, 3.919807953895212*^9}, {
   3.919808208848558*^9, 3.9198082318120193`*^9}, {3.919809333380814*^9, 
   3.919809336570117*^9}, {3.92024054647309*^9, 3.9202405477719917`*^9}, {
   3.920302506608282*^9, 3.9203025169780607`*^9}, 3.920306369934359*^9, {
   3.920306712763356*^9, 3.920306727132897*^9}, {3.9210746494841633`*^9, 
   3.921074664356082*^9}, {3.921077141851111*^9, 3.921077147147793*^9}, 
   3.921249311007926*^9, {3.921249902145979*^9, 3.9212499052452097`*^9}, {
   3.921249953487451*^9, 3.921249954051772*^9}, {3.921250806366598*^9, 
   3.9212508154574957`*^9}, {3.921674311686713*^9, 3.921674313315612*^9}, {
   3.9216775934050617`*^9, 3.921677596207581*^9}, {3.921678032673489*^9, 
   3.9216780535002937`*^9}, {3.921846675839086*^9, 3.92184667935646*^9}, {
   3.921853383955565*^9, 3.921853388456332*^9}, {3.9522157898595877`*^9, 
   3.9522157937692966`*^9}},ExpressionUUID->"4c432c03-a1d3-4acb-afb9-\
34168f462ca5"],

Cell[CellGroupData[{

Cell["Substitutions", "Section",
 CellChangeTimes->{{3.9198104003845463`*^9, 3.919810448327971*^9}, 
   3.91985472520175*^9, {3.920306736292746*^9, 3.9203067381339493`*^9}, {
   3.921182579157118*^9, 3.921182579907123*^9}, {3.921356393763701*^9, 
   3.921356396053357*^9}, {3.921360867913472*^9, 3.9213608689356413`*^9}, {
   3.921361605407935*^9, 3.921361620705611*^9}, 
   3.952215823308626*^9},ExpressionUUID->"356aced8-2386-48ed-9f22-\
af747db9db5c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"a5bacfbe-b4cd-4470-8965-\
0cb02892f857"],

Cell[TextData[{
 "The Thue-Morse sequence is a sequence of lists that begins with the list ",
 StyleBox["{0}", "Input"],
 " and then subsequent terms in the sequence are found by replacing each ",
 StyleBox["0", "Input"],
 " in the previous list with ",
 StyleBox["0,1", "Input"],
 " and each ",
 StyleBox["1", "Input"],
 " with ",
 StyleBox["1,0", "Input"],
 ".  Use ",
 StyleBox["Nest", "Input"],
 " and ",
 StyleBox["ReplaceAll", "Input"],
 " to find the 10th term in the Thue-Morse sequence."
}], "Text",
 CellChangeTimes->{{3.9214099385723333`*^9, 3.921409961402977*^9}, {
  3.921410001882532*^9, 3.921410051655164*^9}, {3.921410302118504*^9, 
  3.921410331420492*^9}},ExpressionUUID->"58ae763c-749a-4f46-ba6c-\
248796dc453f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"c0aa4d79-b069-454a-a81d-\
2604ead28f72"],

Cell["\<\
The following code creates a word guessing game.  Describe the game and play \
it a few times, it is kinda fun!\
\>", "Text",
 CellChangeTimes->{{3.921425775453226*^9, 3.9214258045794363`*^9}, {
  3.9214259996464453`*^9, 3.921426001804422*^9}, {3.921426283926413*^9, 
  3.9214262903101273`*^9}},ExpressionUUID->"14d5a053-6cbd-401a-8e2c-\
be6fc4d3125f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "->", "\"\<_\>\""}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<a\>\"", ",", "\"\<e\>\"", ",", "\"\<i\>\"", ",", "\"\<o\>\"", ",", 
      "\"\<u\>\""}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"word", "=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"WordList", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringReplace", "[", 
  RowBox[{"word", ",", "rules"}], "]"}]}], "Input",
 CellChangeTimes->{{3.921425426285379*^9, 3.92142573077932*^9}, {
  3.921426096973055*^9, 3.921426098638938*^9}, {3.921426176099469*^9, 
  3.921426180819643*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"79709dd2-f935-4ed9-961c-57765f7bafb0"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"4fa288f1-d6e9-4f85-b9b5-\
38776f66ccef"],

Cell["What does the following cell do when evaluated?", "Text",
 CellChangeTimes->{{3.921693093532021*^9, 
  3.9216931293593903`*^9}},ExpressionUUID->"bfc4c2f8-b812-4f2b-865d-\
70887112412c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "@", "100"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{"EvenQ", "@", "x"}]}], "->", 
     RowBox[{"x", "^", "2"}]}], ",", 
    RowBox[{
     RowBox[{"y_", "/;", 
      RowBox[{"OddQ", "@", "y"}]}], "->", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9216162508915367`*^9, 3.9216162717063026`*^9}, {
  3.9216163068279343`*^9, 3.92161632625187*^9}, {3.921693079832011*^9, 
  3.921693080116549*^9}, {3.921693158496719*^9, 3.921693171277547*^9}},
 CellLabel->
  "In[697]:=",ExpressionUUID->"092eb1b1-f8fd-42d6-95dd-2d48539d0015"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Iteration", "Section",
 CellChangeTimes->{{3.919810407400264*^9, 3.919810417507167*^9}, {
  3.9198104546979027`*^9, 3.919810455133122*^9}, {3.919854729192169*^9, 
  3.91985473632985*^9}, {3.920306730940729*^9, 3.920306732248324*^9}, {
  3.920312870219406*^9, 3.920312884061006*^9}, {3.920976999843833*^9, 
  3.920977001048637*^9}, {3.9211658731389523`*^9, 3.921165878051059*^9}, {
  3.92116810449855*^9, 3.921168109476056*^9}, {3.9216776565738163`*^9, 
  3.9216776574085484`*^9}},ExpressionUUID->"74802cbf-efd0-42e8-9c9f-\
fe2b0cf0e28f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"b394cc41-78ce-45c3-befd-\
c18c66dbe178"],

Cell[TextData[{
 "Use ",
 StyleBox["While", "Input"],
 " to define a function that has input an integer ",
 StyleBox["n", "Input"],
 " and output the largest prime smaller than ",
 StyleBox["n", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.921345068016954*^9, 3.921345074473228*^9}, {
  3.9213451068510437`*^9, 3.92134512814149*^9}, {3.921345290220756*^9, 
  3.9213453092871237`*^9}, {3.9213572789550667`*^9, 
  3.921357282310624*^9}},ExpressionUUID->"566da8d3-e89f-4299-a3bf-\
a42f9e4576c1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"684ab699-01fe-4b00-9801-\
3ff48467853d"],

Cell[TextData[{
 "Find the smallest positive multiple of ",
 StyleBox["99999", "Input"],
 " that does not contain the digit ",
 StyleBox["9", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.921345371587945*^9, 
  3.921345404462084*^9}},ExpressionUUID->"921cf4cd-6982-4fc2-ba7f-\
3e414da6c858"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"fc1a446e-963b-419b-bc81-\
85d929abf32b"],

Cell[TextData[{
 "See https://en.wikipedia.org/wiki/Faro_shuffle for a description of how to \
define a \[OpenCurlyDoubleQuote]faro shuffle\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]perfect shuffle\[CloseCurlyDoubleQuote] on a set of ",
 StyleBox["n", "Input"],
 " playing cards.  A perfect shuffle of the list {1,2,3,...,52} will output \
the list {1,27,2,28,3,29,...,25,51,26,52}.   What is the minimum number of \
perfect shuffles needed to bring {1,2,...,52} back to its original order?  \
(See ",
 StyleBox["Riffle", "Input"],
 " for a nice way to define the shuffle function.)"
}], "Text",
 CellChangeTimes->{{3.921409725559429*^9, 3.921409743170362*^9}, {
  3.9214118594819508`*^9, 3.921411931223711*^9}, {3.9214120864037657`*^9, 
  3.921412212636042*^9}, {3.921412292518649*^9, 3.9214123091825333`*^9}, {
  3.921412868212479*^9, 
  3.921412872049821*^9}},ExpressionUUID->"22038834-a5fa-4768-8f4d-\
2c33559dc9af"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Nest", "Section",
 CellChangeTimes->{{3.9198104003845463`*^9, 3.919810448327971*^9}, 
   3.91985472520175*^9, {3.920306736292746*^9, 3.9203067381339493`*^9}, {
   3.921182579157118*^9, 3.921182579907123*^9}, {3.921356393763701*^9, 
   3.921356396053357*^9}, 
   3.952216168579795*^9},ExpressionUUID->"eb708e27-b167-4f05-b2bf-\
b658b02f4773"],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"8c2f909d-380c-4673-99e0-\
de6e93023633"],

Cell[TextData[{
 "A Gray code (see https://en.wikipedia.org/wiki/Gray_code ) is an ordering \
of all bit strings (which are lists with elements either ",
 StyleBox["0", "Input"],
 " or ",
 StyleBox["1", "Input"],
 ") such that consecutive bit strings differ in exactly one position.  For \
example, one Gray code for bit strings of length 2 is \n\n",
 StyleBox["G = {{0,0},{0,1},{1,1},{1,0}}\n", "Input"],
 "\nIf ",
 StyleBox["G", "Input"],
 " is a Gray code for bit strings of length ",
 StyleBox["n", "Input"],
 ", then a Gray code for bit strings of length ",
 StyleBox["n+1", "Input"],
 " can be constructed by following these steps:\n1. Create the list ",
 StyleBox["G0", "Input"],
 " by ",
 StyleBox["Prepend-", "Input"],
 "ing a ",
 StyleBox["0", "Input"],
 " to each element in ",
 StyleBox["G,\n", "Input"],
 "2. Create the list ",
 StyleBox["G1", "Input"],
 " by ",
 StyleBox["Reverse", "Input"],
 "-ing the order of ",
 StyleBox["G", "Input"],
 " and then ",
 StyleBox["Prepend", "Input"],
 "-ing a ",
 StyleBox["1", "Input"],
 " to each element,\n3. ",
 StyleBox["Join", "Input"],
 "-ing the lists ",
 StyleBox["G0", "Input"],
 " and ",
 StyleBox["G1", "Input"],
 ".",
 StyleBox["\n", "Input"],
 "For example, when this is done to the ",
 StyleBox["G", "Input"],
 " above, we find the Gray code\n\n",
 StyleBox["{{0,0,0},{0,0,1},{0,1,1},{0,1,0},{1,1,0},{1,1,1},{1,0,1},{1,0,0}}\n\
\n", "Input"],
 "Define a function ",
 StyleBox["GrayCode[n_]", "Input"],
 " that creates this Gray code of length ",
 StyleBox["n", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.921425775453226*^9, 3.9214258045794363`*^9}, {
  3.9214259996464453`*^9, 3.921426001804422*^9}, {3.921426283926413*^9, 
  3.9214262903101273`*^9}, {3.9214407990054617`*^9, 3.921440883534171*^9}, {
  3.921441420191588*^9, 3.921441451679101*^9}, {3.921442115296605*^9, 
  3.921442304240265*^9}, {3.921442335673397*^9, 3.921442335802065*^9}, {
  3.921442413050907*^9, 3.921442434960408*^9}, {3.92144250127273*^9, 
  3.9214425265757027`*^9}, {3.9214426053002977`*^9, 3.921442636574072*^9}, {
  3.921442667397068*^9, 3.921443073030547*^9}, {3.921443215738521*^9, 
  3.9214434088134193`*^9}, {3.921443586528645*^9, 3.92144359005963*^9}, {
  3.921443639138069*^9, 
  3.921443649416596*^9}},ExpressionUUID->"313fbeee-c351-46a3-9069-\
041af4cce1f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Exercise ",
 
 CounterBox["Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.921335942127119*^9, 3.9213359560974007`*^9}, {
  3.921336036159416*^9, 3.921336086871976*^9}, {3.921336144630742*^9, 
  3.921336187166984*^9}},ExpressionUUID->"2dcfa02c-4fee-4123-bd98-\
23492cd0f66d"],

Cell[TextData[{
 "Define a function ",
 StyleBox["f", "Input"],
 " with input the integer ",
 StyleBox["n", "Input"],
 " and output ",
 StyleBox["n/2", "Input"],
 " if ",
 StyleBox["n", "Input"],
 " is even and ",
 StyleBox["3n+1", "Input"],
 " if ",
 StyleBox["n", "Input"],
 " is odd.  The Collatz conjecture states that for every positive integer the \
sequence ",
 StyleBox["n,f[n],f[f[n]],f[f[f[n]]],...", "Input"],
 " will eventually contain the number ",
 StyleBox["1", "Input"],
 ".  \n\na. Use ",
 StyleBox["NestWhileList", "Input"],
 " to create a function which gives the number of iterations of ",
 StyleBox["f", "Input"],
 " needed to first reach ",
 StyleBox["1", "Input"],
 ". \n\nb. Which integer less than ",
 StyleBox["10000", "Input"],
 " has the maximum number of iterations needed for ",
 StyleBox["f", "Input"],
 " to first reach ",
 StyleBox["1", "Input"],
 "? "
}], "Text",
 CellChangeTimes->{{3.921345478536724*^9, 3.921345522448001*^9}, {
  3.921355985330615*^9, 3.921356064101186*^9}, {3.921356203521125*^9, 
  3.9213562841611347`*^9}, {3.921356374174467*^9, 3.921356380305811*^9}, {
  3.921356422103957*^9, 3.921356513757277*^9}, {3.921356577745224*^9, 
  3.9213565908655148`*^9}},ExpressionUUID->"56f94710-85f3-409e-94cd-\
bdf6493ecc56"]
}, Open  ]]
}, Closed]]
},
WindowSize->{720, 864},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"64ffb58e-0541-4f2c-90fc-b03f514e375c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1125, 19, 72, "Input",ExpressionUUID->"4c432c03-a1d3-4acb-afb9-34168f462ca5"],
Cell[CellGroupData[{
Cell[1708, 43, 454, 7, 68, "Section",ExpressionUUID->"356aced8-2386-48ed-9f22-af747db9db5c"],
Cell[CellGroupData[{
Cell[2187, 54, 298, 8, 54, "Subsection",ExpressionUUID->"a5bacfbe-b4cd-4470-8965-0cb02892f857"],
Cell[2488, 64, 731, 20, 104, "Text",ExpressionUUID->"58ae763c-749a-4f46-ba6c-248796dc453f"]
}, Closed]],
Cell[CellGroupData[{
Cell[3256, 89, 298, 8, 38, "Subsection",ExpressionUUID->"c0aa4d79-b069-454a-a81d-2604ead28f72"],
Cell[3557, 99, 362, 7, 58, "Text",ExpressionUUID->"14d5a053-6cbd-401a-8e2c-be6fc4d3125f"],
Cell[3922, 108, 769, 19, 71, "Input",ExpressionUUID->"79709dd2-f935-4ed9-961c-57765f7bafb0"]
}, Closed]],
Cell[CellGroupData[{
Cell[4728, 132, 298, 8, 38, "Subsection",ExpressionUUID->"4fa288f1-d6e9-4f85-b9b5-38776f66ccef"],
Cell[5029, 142, 191, 3, 35, "Text",ExpressionUUID->"bfc4c2f8-b812-4f2b-865d-70887112412c"],
Cell[5223, 147, 619, 16, 29, "Input",ExpressionUUID->"092eb1b1-f8fd-42d6-95dd-2d48539d0015"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[5891, 169, 543, 8, 54, "Section",ExpressionUUID->"74802cbf-efd0-42e8-9c9f-fe2b0cf0e28f"],
Cell[CellGroupData[{
Cell[6459, 181, 298, 8, 54, "Subsection",ExpressionUUID->"b394cc41-78ce-45c3-befd-c18c66dbe178"],
Cell[6760, 191, 496, 13, 58, "Text",ExpressionUUID->"566da8d3-e89f-4299-a3bf-a42f9e4576c1"]
}, Closed]],
Cell[CellGroupData[{
Cell[7293, 209, 298, 8, 38, "Subsection",ExpressionUUID->"684ab699-01fe-4b00-9801-3ff48467853d"],
Cell[7594, 219, 294, 9, 35, "Text",ExpressionUUID->"921cf4cd-6982-4fc2-ba7f-3e414da6c858"]
}, Closed]],
Cell[CellGroupData[{
Cell[7925, 233, 298, 8, 38, "Subsection",ExpressionUUID->"fc1a446e-963b-419b-bc81-85d929abf32b"],
Cell[8226, 243, 930, 17, 127, "Text",ExpressionUUID->"22038834-a5fa-4768-8f4d-2c33559dc9af"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[9205, 266, 347, 6, 54, "Section",ExpressionUUID->"eb708e27-b167-4f05-b2bf-b658b02f4773"],
Cell[CellGroupData[{
Cell[9577, 276, 298, 8, 54, "Subsection",ExpressionUUID->"8c2f909d-380c-4673-99e0-de6e93023633"],
Cell[9878, 286, 2315, 63, 371, "Text",ExpressionUUID->"313fbeee-c351-46a3-9069-041af4cce1f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12230, 354, 298, 8, 54, "Subsection",ExpressionUUID->"2dcfa02c-4fee-4123-bd98-23492cd0f66d"],
Cell[12531, 364, 1266, 37, 219, "Text",ExpressionUUID->"56f94710-85f3-409e-94cd-bdf6493ecc56"]
}, Open  ]]
}, Closed]]
}
]
*)

